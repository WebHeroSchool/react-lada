[{"C:\\Users\\Лада\\ReactLada\\src\\index.js":"1","C:\\Users\\Лада\\ReactLada\\src\\App.js":"2","C:\\Users\\Лада\\react-lada\\src\\index.js":"3","C:\\Users\\Лада\\react-lada\\src\\components\\App\\App.js":"4","C:\\Users\\Лада\\react-lada\\src\\components\\ItemList\\ItemList.js":"5","C:\\Users\\Лада\\react-lada\\src\\components\\Item\\Item.js":"6","C:\\Users\\Лада\\react-lada\\src\\components\\InputItem\\InputItem.js":"7","C:\\Users\\Лада\\react-lada\\src\\components\\Footer\\Footer.js":"8","C:\\Users\\Лада\\react-lada\\src\\components\\Todo\\Todo.js":"9","C:\\Users\\Лада\\react-lada\\src\\components\\About\\About.js":"10"},{"size":152,"mtime":1609093621268,"results":"11","hashOfConfig":"12"},{"size":94,"mtime":1609093633389,"results":"13","hashOfConfig":"12"},{"size":164,"mtime":1609144103636,"results":"14","hashOfConfig":"15"},{"size":810,"mtime":1611137929584,"results":"16","hashOfConfig":"15"},{"size":633,"mtime":1611295659402,"results":"17","hashOfConfig":"15"},{"size":1286,"mtime":1610612525595,"results":"18","hashOfConfig":"15"},{"size":1295,"mtime":1610611795744,"results":"19","hashOfConfig":"15"},{"size":771,"mtime":1611323595625,"results":"20","hashOfConfig":"15"},{"size":2804,"mtime":1611323998422,"results":"21","hashOfConfig":"15"},{"size":4713,"mtime":1611129510699,"results":"22","hashOfConfig":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1u16arn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"22bvlk",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},"C:\\Users\\Лада\\ReactLada\\src\\index.js",["46"],"C:\\Users\\Лада\\ReactLada\\src\\App.js",[],"C:\\Users\\Лада\\react-lada\\src\\index.js",[],["47","48"],"C:\\Users\\Лада\\react-lada\\src\\components\\App\\App.js",[],"C:\\Users\\Лада\\react-lada\\src\\components\\ItemList\\ItemList.js",[],"C:\\Users\\Лада\\react-lada\\src\\components\\Item\\Item.js",[],"C:\\Users\\Лада\\react-lada\\src\\components\\InputItem\\InputItem.js",["49","50"],"import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport styles from './InputItem.module.css';\r\n\r\nclass InputItem extends React.Component {\r\n  state = {\r\n    inputValue: '',\r\n    errorAdd: false\r\n  };\r\n\r\n  onButtonClick = () => {\r\n    this.setState({\r\n      inputValue: ''\r\n    });\r\n\r\n    if (this.state.inputValue !== '') {\r\n      this.props.onClickAdd(this.state.inputValue);\r\n      this.state.errorAdd = false;\r\n    } else {\r\n      this.state.errorAdd = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.inputItem}>\r\n        <TextField\r\n          className={styles.textField}\r\n          id='standard-textarea'\r\n          label='Добавить задание'\r\n          placeholder='Введите задание'\r\n          error={this.state.errorAdd}\r\n          multiline\r\n          value={this.state.inputValue}\r\n          onChange={event => this.setState({inputValue: event.target.value.toUpperCase()})}\r\n        />\r\n        <Fab\r\n          color='secondary'\r\n          aria-label='add'\r\n          onClick={this.onButtonClick}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputItem;","C:\\Users\\Лада\\react-lada\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Лада\\react-lada\\src\\components\\Todo\\Todo.js",["51"],"C:\\Users\\Лада\\react-lada\\src\\components\\About\\About.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67"],"import React, { useContext } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { Octokit } from '@octokit/rest';\r\n\r\nimport styles from './About.module.css';\r\n\r\nimport arroba from'./img/arroba.svg';\r\nimport telegram from './img/telegram.svg';\r\nimport frame from './img/Frame.svg';\r\n\r\nimport classnames from 'classnames';\r\n\r\nconst octokit = new Octokit();\r\n\r\nclass About extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    isLoadingName: true,\r\n    isError: false,\r\n    repoList: [],\r\n    userData: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    octokit.repos.listForUser({\r\n      username: 'ladariugina'\r\n    }).then(({ data }) => {\r\n        this.setState({\r\n          repoList: data,\r\n          isLoading: false\r\n        });\r\n        console.log(data);\r\n    })\r\n    .catch(err => {\r\n      this.setState({\r\n        error: 'Что-то пошло не так...',\r\n        isError: true,\r\n        isLoading: false\r\n      });\r\n    });\r\n\r\n    octokit.users.getByUsername({\r\n      username: 'ladariugina'\r\n    })\r\n    .then(({ data }) => {\r\n      this.setState({\r\n        userData: data,\r\n        isLoadingName: false\r\n      });\r\n    })\r\n    .catch(err => {\r\n      this.setState({\r\n        error: 'Ошибка',\r\n        isError: true,\r\n        isLoadingName: false\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { isLoading, isLoadingName, isError, repoList, userData, languageLogo} = this.state;\r\n\r\n    return (\r\n      <div className={styles.wrap}>\r\n        {isLoadingName ? <div className={styles.preloader}> </div> :\r\n        <div className={styles.info}>\r\n          <img src={userData.avatar_url} className={styles.img}/>\r\n          <div>\r\n            <p className={styles.title}> {userData.name} </p>\r\n            <p className={styles.subtitle}> {userData.bio} </p>\r\n            <div className={styles.contacts}>\r\n              <img src={arroba}/>\r\n              <p className={styles.contact}>Ladu3112@gmail.com</p>\r\n            </div>\r\n            <div className={styles.phone}>\r\n              <img src={telegram}/>\r\n              <p className={styles.contact}>+7-963-731-43-20</p>\r\n            </div>\r\n          </div>\r\n          <div className={styles.link}>\r\n            <a href={userData.html_url} className={styles.github}></a>\r\n            <a href='#' className={styles.linkedin}></a>\r\n            <a href='#' className={styles.facebook}></a>\r\n            <a href='#' className={styles.vk}></a>\r\n          </div>\r\n        </div>}\r\n        { isLoading ? <div className={styles.preloader}> </div> :\r\n          <div className={styles.repos_wrap}>\r\n            <p className={styles.repos_title}>Репозитории на github.com</p>\r\n            { isError ? \r\n              <div className={styles.error}>\r\n                <img src={frame}/>\r\n                <p className={styles.text}>Что-то пошло не так...</p>\r\n                <p className={styles.text__help}>Попробуйте <a href='#'>загрузить</a> ещё раз</p>\r\n              </div> :\r\n              <div className={styles.repositories}>\r\n                { (repoList.length > 0) ? \r\n                (repoList.map(repo => (<a key={repo.id} href={repo.html_url} className={styles.repositories__name}>\r\n                  {repo.name} \r\n                    <div className={styles.repositories__info}>\r\n                      <span key={repo.id} className = {classnames({\r\n                        [styles.language]: true,\r\n                        [styles.info__logo_html]: repo.language === 'HTML',\r\n                        [styles.info__logo_css]: repo.language === 'CSS',\r\n                        [styles.info__logo_js]: repo.language === 'JavaScript'\r\n                        })}> \r\n                        {repo.language} \r\n                      </span>\r\n                      <span className={styles.info__star} key={repo.id}>{repo.stargazers_count}</span>\r\n                      <span className={styles.info__fork} key={repo.id}>{repo.forks}</span>\r\n                      <span key={repo.id}>{repo.updated_at}</span>\r\n                    </div>\r\n                  </a>))) :\r\n                <div className={styles.reposNone}>\r\n                <img src={frame}/>\r\n                <p className={styles.text}>Репозитории отсутствуют</p>\r\n                <div className={styles.reposNoneAdd}>\r\n                  <p className={styles.text__help}>Добавьте как минимум один репозиторий на <a href='https://github.com/'>github.com</a></p>\r\n                </div>\r\n                </div>\r\n                }\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default About;",{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":21,"column":7,"nodeType":"78","endLine":21,"endColumn":17},{"ruleId":"76","severity":1,"message":"77","line":23,"column":7,"nodeType":"78","endLine":23,"endColumn":17},{"ruleId":"68","severity":1,"message":"79","line":1,"column":26,"nodeType":"70","messageId":"71","endLine":1,"endColumn":35},{"ruleId":"68","severity":1,"message":"80","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":27},{"ruleId":"68","severity":1,"message":"81","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":26},{"ruleId":"68","severity":1,"message":"82","line":62,"column":68,"nodeType":"70","messageId":"71","endLine":62,"endColumn":80},{"ruleId":"83","severity":1,"message":"84","line":68,"column":11,"nodeType":"85","endLine":68,"endColumn":66},{"ruleId":"83","severity":1,"message":"84","line":73,"column":15,"nodeType":"85","endLine":73,"endColumn":34},{"ruleId":"83","severity":1,"message":"84","line":77,"column":15,"nodeType":"85","endLine":77,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":82,"column":13,"nodeType":"85","endLine":82,"endColumn":67},{"ruleId":"86","severity":1,"message":"87","line":83,"column":13,"nodeType":"85","endLine":83,"endColumn":53},{"ruleId":"88","severity":1,"message":"89","line":83,"column":13,"nodeType":"85","endLine":83,"endColumn":53},{"ruleId":"86","severity":1,"message":"87","line":84,"column":13,"nodeType":"85","endLine":84,"endColumn":53},{"ruleId":"88","severity":1,"message":"89","line":84,"column":13,"nodeType":"85","endLine":84,"endColumn":53},{"ruleId":"86","severity":1,"message":"87","line":85,"column":13,"nodeType":"85","endLine":85,"endColumn":47},{"ruleId":"88","severity":1,"message":"89","line":85,"column":13,"nodeType":"85","endLine":85,"endColumn":47},{"ruleId":"83","severity":1,"message":"84","line":93,"column":17,"nodeType":"85","endLine":93,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":95,"column":61,"nodeType":"85","endLine":95,"endColumn":73},{"ruleId":"83","severity":1,"message":"84","line":116,"column":17,"nodeType":"85","endLine":116,"endColumn":35},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'useEffect' is defined but never used.","'useContext' is defined but never used.","'CircularProgress' is defined but never used.","'languageLogo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]